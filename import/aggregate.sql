-- Create aggregated table
DROP TABLE IF EXISTS osmetymology.ways_agg;
CREATE TABLE osmetymology.ways_agg (
	id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name TEXT COLLATE "da_DK",
	searchname TEXT COLLATE "da_DK",
	municipality_code varchar,
	way_ids INTEGER[],
	"name:etymology" TEXT COLLATE "da_DK",
	"name:etymology:wikipedia" TEXT COLLATE "da_DK",
	"name:etymology:wikidata" TEXT COLLATE "da_DK",
	geom GEOMETRY(MultiLineString, 4326)
);

-- Import, intersect on municipality boundaries
INSERT INTO osmetymology.ways_agg (name, searchname, municipality_code, way_ids, "name:etymology", "name:etymology:wikipedia", "name:etymology:wikidata", geom)
SELECT name, TRANSLATE(REGEXP_REPLACE(LOWER(name), '[^[:alnum:]]', '', 'gi'), 'áàâäãåçéèêëíìîïñóòôöõúùûüýÿ', 'aaaaaaceeeeiiiinooooouuuuyy'), m.kode, array_agg(way_id), "name:etymology", "name:etymology:wikipedia","name:etymology:wikidata", ST_Multi(ST_Intersection(st_transform(ST_COLLECT(geom), 4326), m.wkb_geometry))
FROM osmetymology.osm_ways ow
INNER JOIN osmetymology.municipalities m ON st_transform(ow.geom,4326) && m.wkb_geometry AND ST_INTERSECTS(st_transform(ow.geom,4326), m.wkb_geometry)
WHERE name IS NOT NULL AND ("name:etymology" IS NOT NULL OR "name:etymology:wikipedia" IS NOT NULL OR "name:etymology:wikidata" is not NULL)
GROUP by name, m.navn, m.kode, "name:etymology", "name:etymology:wikipedia","name:etymology:wikidata", m.wkb_geometry;

CREATE INDEX ways_agg_geom_idx ON osmetymology.ways_agg USING gist (geom);
CREATE INDEX ways_agg_name_idx ON osmetymology.ways_agg ("name" text_pattern_ops);
CREATE INDEX ways_agg_searchname_idx ON osmetymology.ways_agg ("searchname" text_pattern_ops);
CREATE INDEX ways_agg_municipality_idx ON osmetymology.ways_agg ("municipality_code");
CREATE INDEX ways_agg_name_etymology_wikidata_idx ON osmetymology.ways_agg ("name:etymology:wikidata");

DROP INDEX IF EXISTS osmetymology.municipalities_kode_idx;
CREATE INDEX municipalities_kode_idx ON osmetymology.municipalities ("kode");
